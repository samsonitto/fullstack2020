{"version":3,"sources":["reducers/notificationReducer.js","stores/store.js","components/Header.js","components/Input.js","components/Header2.js","components/Filter.js","components/Button.js","components/AddNewBlog.js","components/Togglable.js","components/Blog.js","components/Blogs.js","services/blogs.js","components/Notification.js","components/LoginForm.js","services/login.js","App.js","index.js"],"names":["timer","notificationReducer","state","action","type","notification","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Header","props","text","Input","placeholder","onChange","handleOnChange","id","value","name","Header2","Filter","handleFilterOnChange","Button","onClick","handleClick","AddNewBlog","createBlog","showMessage","useState","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","e","target","preventDefault","title","author","url","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenHidden","toggleVisibility","useImperativeHandle","style","buttonLabel","idView","className","children","buttonHideLabel","idHide","Blog","blog","user","handleLikeClick","handleDeleteClick","key","trim","likes","username","Blogs","blogs","map","i","rowIndex","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","updatedObject","put","deleteBlog","delete","setToken","newToken","Notification","useSelector","msgClass","msg","LoginForm","onSubmit","handleLogin","setUsername","password","setPassword","login","credentials","App","setBlogs","setNewLike","sort","b","blogsToShow","setBlogsToShow","setUser","useEffect","blogService","initialBlogs","console","log","catch","error","loggedUserJSON","window","localStorage","getItem","JSON","parse","dispatch","useDispatch","loginService","setItem","stringify","handleAddClick","blogObject","blogFormRef","current","newBlog","concat","savedBlog","resetForm","message","confirm","filter","document","getElementById","time","clearTimeout","setTimeout","undefined","timeout","createRef","clear","filtered","toLowerCase","includes","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6aea7d07.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'NOTIFICATION':\r\n      return action.notification\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nlet timer\r\n\r\nexport const notificationChange = (notification, time) => {\r\n  return async dispatch => {\r\n    await dispatch({\r\n      type: 'NOTIFICATION',\r\n      notification,\r\n    })\r\n\r\n    clearTimeout(timer)\r\n\r\n    timer = setTimeout(() => {\r\n      dispatch({\r\n        type: 'NOTIFICATION',\r\n        notification: { msg: '', msgClass: undefined },\r\n        timeout: true\r\n      })\r\n    }, time * 1000)\r\n    \r\n  }\r\n}\r\n\r\nexport default notificationReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\n//import blogReducer from '../reducers/anecdoteReducer'\r\nimport notificationReducer from '../reducers/notificationReducer'\r\n//import filterReducer from '../reducers/filterReducer'\r\n\r\nconst reducer = combineReducers({\r\n  //blogs: blogReducer,\r\n  notification: notificationReducer,\r\n  //filter: filterReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <h1>{props.text}</h1>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={props.handleOnChange}\r\n            id={props.id}\r\n            value={props.value}\r\n            name={props.name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Header2 = (props) => {\r\n    return (\r\n        <h2>{props.text}</h2>\r\n    )\r\n}\r\n\r\nexport default Header2","import React from 'react'\r\nimport Input from './Input'\r\nimport Header2 from './Header2'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n        <Header2 text={'Search'} />\r\n        Filter by Name: <Input placeholder={'Name..'} handleOnChange={props.handleFilterOnChange} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button \r\n            onClick={props.handleClick}\r\n            type={props.type}\r\n            id={props.id}\r\n        >\r\n            {props.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState } from \"react\";\r\nimport Input from './Input';\r\nimport Button from './Button';\r\nimport Header2 from './Header2';\r\n\r\nconst AddNewBlog = ({ createBlog, showMessage }) => {\r\n  const [ newTitle, setNewTitle ] = useState('')\r\n  const [ newAuthor, setNewAuthor ] = useState('')\r\n  const [ newUrl, setNewUrl ] = useState('')\r\n\r\n  const handleAddTitleOnChange = (e) => {\r\n    setNewTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddAuthorOnChange = (e) => {\r\n    setNewAuthor(e.target.value)\r\n  }\r\n\r\n  const handleAddUrlOnChange = (e) => {\r\n    setNewUrl(e.target.value)\r\n  }\r\n\r\n  const addBlog = (e) => {\r\n    e.preventDefault()\r\n    if(newTitle === '') {\r\n      showMessage('Input title', 'error')\r\n    }\r\n    else if (newAuthor === '') {\r\n      showMessage('Input author', 'error')\r\n    }\r\n    else if (newUrl === '') {\r\n      showMessage('Input url', 'error')\r\n    } else {\r\n      createBlog({\r\n        title: newTitle,\r\n        author: newAuthor,\r\n        url: newUrl,\r\n      })\r\n\r\n      setNewTitle('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n    }\r\n  }\r\n    return (\r\n        <>\r\n            <Header2 text={'Add New Blog'} />\r\n            <form>\r\n                <div>\r\n                    Title: <Input placeholder={'Title..'} handleOnChange={handleAddTitleOnChange} id={'titleInput0'} /><br />\r\n                    Author: <Input placeholder={'Author..'} handleOnChange={handleAddAuthorOnChange} id={'authorInput0'} /><br />\r\n                    Url: <Input placeholder={'Url..'} handleOnChange={handleAddUrlOnChange} id={'urlInput0'} />\r\n                </div>\r\n                <div>\r\n                    <Button type={'submit'} handleClick={addBlog} text={'Add'} id='addNewBlogButton' />\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddNewBlog","import React, { useState, useImperativeHandle } from 'react'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [ visible, setVisible ] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenHidden = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button handleClick={toggleVisibility} text={props.buttonLabel} id={props.idView} />\r\n      </div>\r\n      <div style={showWhenHidden} className='togglableContent'>\r\n        {props.children}\r\n        <Button handleClick={toggleVisibility} text={props.buttonHideLabel} id={props.idHide} />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n  buttonHideLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React, { useState } from 'react'\r\nimport Togglable from './Togglable'\r\nimport Button from './Button'\r\n\r\nconst Blog = ({ blog, user, handleLikeClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr id={blog.id} key={blog.id} className='blog'>\r\n      <td>{blog.title}</td>\r\n      <td>{blog.author}</td>\r\n      <td>\r\n        <Togglable buttonLabel={'View'} buttonHideLabel={'Hide Info'} idView={blog.title.trim()}>\r\n          <div>\r\n            <p>URL: {blog.url}</p>\r\n            <p>Likes: {blog.likes} <Button text='like' handleClick={() => handleLikeClick(blog)} /></p>\r\n            {blog.user ? <p>Added by: {blog.user.name}</p> : ''}\r\n            {blog.user ? (user.username === blog.user.username ? <Button text='Delete Blog' id={(blog.title + blog.author).trim()} handleClick={() => handleDeleteClick(blog.id, blog.title)} /> : '') : ''}\r\n          </div>\r\n        </Togglable>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Blog","import React from 'react';\r\nimport Header2 from './Header2';\r\nimport Button from './Button';\r\nimport Togglable from './Togglable';\r\nimport Blog from './Blog';\r\n\r\nconst Blogs = (props) => {\r\n    return (\r\n        <>\r\n          <Header2 text={'Blogs'} />\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Author</th>\r\n                <th>Info</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.blogs.map((blog, i) => \r\n                <>\r\n                  <Blog blog={blog} user={props.user} handleLikeClick={props.handleLikeClick} handleDeleteClick={props.handleDeleteClick} rowIndex={`row${i}`} />\r\n                </>\r\n              )}\r\n            </tbody>\r\n            \r\n          </table>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blogs","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = (updatedObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteBlog = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response)\r\n}\r\n\r\nexport default { getAll, create, update, deleteBlog, setToken }","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n  \r\n  return (\r\n    <div className={notification.msgClass}>\r\n        {notification.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = (props) => (\r\n  <form onSubmit={props.handleLogin}>\r\n    <div>\r\n      username\r\n      <Input\r\n        type=\"text\"\r\n        value={props.username}\r\n        name=\"Username\"\r\n        handleOnChange={({ target }) => props.setUsername(target.value)}\r\n        id=\"inputUsername\"\r\n      />\r\n    </div>\r\n    <div>\r\n      password\r\n      <Input\r\n        type=\"password\"\r\n        value={props.password}\r\n        name=\"Password\"\r\n        handleOnChange={({ target }) => props.setPassword(target.value)}\r\n        id=\"inputPassword\"\r\n      />\r\n    </div>\r\n    <Button type=\"submit\" text=\"Login\" id=\"loginButton\" />\r\n  </form>      \r\n)\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Filter from './components/Filter'\nimport AddNewBlog from './components/AddNewBlog'\nimport Blogs from './components/Blogs'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\nimport Button from './components/Button'\nimport LoginForm from './components/LoginForm'\nimport loginService from './services/login'\nimport './App.css'\nimport Togglable from './components/Togglable'\nimport { useDispatch } from 'react-redux'\nimport { notificationChange } from \"./reducers/notificationReducer\"\n\n\n\nconst App = () => {\n  const [ blogs, setBlogs] = useState([])\n  const [ newLike, setNewLike ] = useState('')\n  const [ blogsToShow, setBlogsToShow] = useState(blogs.sort((a, b) => (a.likes < b.likes ? 1 : -1)))\n  const [ username, setUsername ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const [ user, setUser ] = useState(null)\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs => {\n        setBlogs(initialBlogs)\n        console.log(initialBlogs)\n        setBlogsToShow(initialBlogs)\n      })\n      .catch(error => {\n        showMessage(`Error caught: ${error}`, 'error')\n      })\n    \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n      console.log(user)\n      \n    }\n  }, [])\n\n  const dispatch = useDispatch()\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      showMessage('wrong credentials', 'error')\n    }\n  }\n\n  const handleLogout = () => {\n    console.log('logging out')\n    setUser(null)\n    window.localStorage.clear()\n  }\n  \n\n  const handleAddClick = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      const newBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(newBlog.savedBlog))\n      setBlogsToShow(blogs.concat(newBlog.savedBlog))\n      showMessage(`Added ${newBlog.savedBlog.title}`, 'success')\n      resetForm()\n      \n    } catch (error) {\n      showMessage(error, 'error')\n    }\n\n  }\n\n  const handleDeleteClick = async (id, title) => {\n    let message = `Do you really want to delete ${title}?`\n    if(window.confirm(message)){\n      try {\n        const deletedBlog = await blogService.deleteBlog(id)\n        \n        setBlogs(blogs.filter(b => b.id !== id))\n        setBlogsToShow(blogs.filter(b => b.id !== id))\n        showMessage(`The \"${title}\" blog has beed deleted`, 'neutral')\n      } catch (error) {\n        showMessage(error, 'error')\n      }\n    }\n  }\n\n  const handleLikeClick = (blog) => {\n\n    console.log(blog)\n    \n    const updatedObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes += 1,\n      user: blog.user ? blog.user.id : undefined,\n    }    \n\n    blogService\n      .update(updatedObject, blog.id)\n      .then(() => {\n        setBlogs(blogs)\n        showMessage(`You liked ${updatedObject.title}`, 'success')\n      })\n      .catch(error => {\n        showMessage(error, 'error')\n      })\n  }\n\n  const resetForm = () => {\n    setNewLike('')\n    document.getElementById('titleInput0').value = ''\n    document.getElementById('authorInput0').value = ''\n    document.getElementById('urlInput0').value = ''\n  }\n\n  const showMessage = (msg, msgClass) => {\n    dispatch(notificationChange({ msg, msgClass }, 5))\n  }\n\n  const handleFilterOnChange = (e) => {\n    const filtered = blogs.filter(blog => blog.title.toLowerCase().includes(e.target.value.toLowerCase()))\n    setBlogsToShow(filtered)\n  }\n\n  const blogFormRef = React.createRef()\n\n  if (user === null) {\n    return (\n      <div>\n        <Header text={'Bloglist'} />\n        <Notification />\n        <Togglable buttonLabel={'Login'} buttonHideLabel={'Cancel'}>\n          <LoginForm \n            handleLogin={handleLogin}\n            username={username}\n            setUsername={setUsername} \n            password={password}\n            setPassword={setPassword}\n          />\n        </Togglable>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Header text={'Bloglist'} />\n      <Notification />\n      <p>{user.name} logged in</p><Button text={\"logout\"} handleClick={handleLogout} />\n      <Togglable buttonLabel={'New Blog'} ref={blogFormRef} buttonHideLabel={'Cancel'}>\n        <AddNewBlog \n          createBlog={handleAddClick}\n          showMessage={showMessage}\n        />\n      </Togglable>\n      <Filter handleFilterOnChange={handleFilterOnChange} />\n    \n      <Blogs blogs={blogsToShow} handleDeleteClick={handleDeleteClick} handleLikeClick={handleLikeClick} user={user} />      \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}