{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","reducers/filterReducer.js","stores/store.js","components/Header.js","components/Input.js","components/Header2.js","components/Filter.js","components/Button.js","components/AddNewBlog.js","components/Togglable.js","components/Blog.js","components/Blogs.js","components/Notification.js","components/LoginForm.js","services/login.js","App.js","index.js"],"names":["timer","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","updatedObject","id","put","deleteBlog","delete","setToken","newToken","sortedState","state","sort","b","likes","addBlog","content","dispatch","blogService","newBlog","type","deletedBlog","reducer","action","console","log","likedBlog","find","map","savedBlog","dletedId","filter","notificationReducer","notification","filterReducer","combineReducers","blogs","blogReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Header","props","text","Input","placeholder","onChange","handleOnChange","value","name","Header2","Filter","handleFilterOnChange","Button","onClick","handleClick","AddNewBlog","createBlog","showMessage","useState","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","e","target","preventDefault","title","author","url","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenHidden","toggleVisibility","useImperativeHandle","style","buttonLabel","idView","className","children","buttonHideLabel","idHide","Blog","blog","user","handleLikeClick","handleDeleteClick","key","trim","username","Blogs","i","rowIndex","Notification","useSelector","msgClass","msg","LoginForm","onSubmit","handleLogin","setUsername","password","setPassword","login","credentials","App","setNewLike","setUser","useDispatch","useEffect","toLowerCase","includes","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","handleAddClick","blogObject","blogFormRef","current","resetForm","error","message","confirm","document","getElementById","time","clearTimeout","setTimeout","undefined","timeout","createRef","clear","updatedBlog","likeBlog","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eedfd6be.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'NOTIFICATION':\r\n      return action.notification\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nlet timer\r\n\r\nexport const notificationChange = (notification, time) => {\r\n  return async dispatch => {\r\n    await dispatch({\r\n      type: 'NOTIFICATION',\r\n      notification,\r\n    })\r\n\r\n    clearTimeout(timer)\r\n\r\n    timer = setTimeout(() => {\r\n      dispatch({\r\n        type: 'NOTIFICATION',\r\n        notification: { msg: '', msgClass: undefined },\r\n        timeout: true\r\n      })\r\n    }, time * 1000)\r\n    \r\n  }\r\n}\r\n\r\nexport default notificationReducer","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = (updatedObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteBlog = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response)\r\n}\r\n\r\nexport default { getAll, create, update, deleteBlog, setToken }","import blogService from '../services/blogs'\r\n\r\nconst sortedState = (state) => {\r\n  return state.sort((a, b) => (a.likes < b.likes ? 1 : -1))\r\n}\r\n\r\nconst reducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n  switch (action.type) {\r\n    case 'LIKE':\r\n      const id = action.data.id\r\n      const likedBlog = state.find(b => b.id === id)\r\n      return sortedState(state.map(b => b.id !== id ? b : likedBlog))\r\n\r\n    case 'NEW':\r\n      return sortedState([...state, action.data.savedBlog])\r\n      \r\n    case 'INIT_BLOGS':\r\n      return action.data\r\n      \r\n    case 'DELETE':\r\n      const dletedId = action.data.id\r\n      return sortedState(state.filter(b => b.id !== dletedId))\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: sortedState(blogs)\r\n    })\r\n  }\r\n}\r\n\r\nexport const addBlog = (content) => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(content)\r\n    dispatch({\r\n      type: 'NEW',\r\n      data: newBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blog, id) => {\r\n  return async dispatch => {\r\n    const updatedBlog = await blogService.update(blog, id)\r\n    dispatch({\r\n      type: 'LIKE',\r\n      data: updatedBlog\r\n    })\r\n    \r\n  }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async dispatch => {\r\n    const deletedBlog = await blogService.deleteBlog(id)\r\n    dispatch({\r\n      type: 'DELETE',\r\n      data: deletedBlog\r\n    })\r\n    \r\n  }\r\n}\r\n\r\nexport default reducer","const filterReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const filterChange = (filter) => {\r\n  return {\r\n    type: 'FILTER',\r\n    filter,\r\n  }\r\n}\r\n\r\nexport default filterReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport blogReducer from '../reducers/blogReducer'\r\nimport notificationReducer from '../reducers/notificationReducer'\r\nimport filterReducer from '../reducers/filterReducer'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificationReducer,\r\n  filter: filterReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <h1>{props.text}</h1>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={props.handleOnChange}\r\n            id={props.id}\r\n            value={props.value}\r\n            name={props.name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Header2 = (props) => {\r\n    return (\r\n        <h2>{props.text}</h2>\r\n    )\r\n}\r\n\r\nexport default Header2","import React from 'react'\r\nimport Input from './Input'\r\nimport Header2 from './Header2'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n        <Header2 text={'Search'} />\r\n        Filter by Name: <Input placeholder={'Name..'} handleOnChange={props.handleFilterOnChange} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button \r\n            onClick={props.handleClick}\r\n            type={props.type}\r\n            id={props.id}\r\n        >\r\n            {props.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState } from \"react\"\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport Header2 from './Header2'\r\n\r\nconst AddNewBlog = ({ createBlog, showMessage }) => {\r\n  const [ newTitle, setNewTitle ] = useState('')\r\n  const [ newAuthor, setNewAuthor ] = useState('')\r\n  const [ newUrl, setNewUrl ] = useState('')\r\n\r\n  const handleAddTitleOnChange = (e) => {\r\n    setNewTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddAuthorOnChange = (e) => {\r\n    setNewAuthor(e.target.value)\r\n  }\r\n\r\n  const handleAddUrlOnChange = (e) => {\r\n    setNewUrl(e.target.value)\r\n  }\r\n\r\n  const addBlog = (e) => {\r\n    e.preventDefault()\r\n    if(newTitle === '') {\r\n      showMessage('Input title', 'error')\r\n    }\r\n    else if (newAuthor === '') {\r\n      showMessage('Input author', 'error')\r\n    }\r\n    else if (newUrl === '') {\r\n      showMessage('Input url', 'error')\r\n    } else {\r\n      const newBlog = {\r\n        title: newTitle,\r\n        author: newAuthor,\r\n        url: newUrl,\r\n      }\r\n      createBlog({\r\n        title: newTitle,\r\n        author: newAuthor,\r\n        url: newUrl,\r\n      })\r\n\r\n      setNewTitle('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n    }\r\n  }\r\n    return (\r\n        <>\r\n            <Header2 text={'Add New Blog'} />\r\n            <form>\r\n                <div>\r\n                    Title: <Input placeholder={'Title..'} handleOnChange={handleAddTitleOnChange} id={'titleInput0'} /><br />\r\n                    Author: <Input placeholder={'Author..'} handleOnChange={handleAddAuthorOnChange} id={'authorInput0'} /><br />\r\n                    Url: <Input placeholder={'Url..'} handleOnChange={handleAddUrlOnChange} id={'urlInput0'} />\r\n                </div>\r\n                <div>\r\n                    <Button type={'submit'} handleClick={addBlog} text={'Add'} id='addNewBlogButton' />\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddNewBlog","import React, { useState, useImperativeHandle } from 'react'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [ visible, setVisible ] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenHidden = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button handleClick={toggleVisibility} text={props.buttonLabel} id={props.idView} />\r\n      </div>\r\n      <div style={showWhenHidden} className='togglableContent'>\r\n        {props.children}\r\n        <Button handleClick={toggleVisibility} text={props.buttonHideLabel} id={props.idHide} />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n  buttonHideLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React, { useState } from 'react'\r\nimport Togglable from './Togglable'\r\nimport Button from './Button'\r\n\r\nconst Blog = ({ blog, user, handleLikeClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr id={blog.id} key={blog.id} className='blog'>\r\n      <td>{blog.title}</td>\r\n      <td>{blog.author}</td>\r\n      <td>\r\n        <Togglable buttonLabel={'View'} buttonHideLabel={'Hide Info'} idView={blog.title.trim()}>\r\n          <div>\r\n            <p>URL: {blog.url}</p>\r\n            <p>Likes: {blog.likes} <Button text='like' handleClick={() => handleLikeClick(blog)} /></p>\r\n            {blog.user ? <p>Added by: {blog.user.name}</p> : ''}\r\n            {blog.user ? (user.username === blog.user.username ? <Button text='Delete Blog' id={(blog.title + blog.author).trim()} handleClick={() => handleDeleteClick(blog.id, blog.title)} /> : '') : ''}\r\n          </div>\r\n        </Togglable>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Blog","import React from 'react';\r\nimport Header2 from './Header2';\r\nimport Button from './Button';\r\nimport Togglable from './Togglable';\r\nimport Blog from './Blog';\r\n\r\nconst Blogs = (props) => {\r\n    return (\r\n        <>\r\n          <Header2 text={'Blogs'} />\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Author</th>\r\n                <th>Info</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.blogs.map((blog, i) => \r\n                <>\r\n                  <Blog blog={blog} user={props.user} handleLikeClick={props.handleLikeClick} handleDeleteClick={props.handleDeleteClick} rowIndex={`row${i}`} />\r\n                </>\r\n              )}\r\n            </tbody>\r\n            \r\n          </table>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n  \r\n  return (\r\n    <div className={notification.msgClass}>\r\n        {notification.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = (props) => (\r\n  <form onSubmit={props.handleLogin}>\r\n    <div>\r\n      username\r\n      <Input\r\n        type=\"text\"\r\n        value={props.username}\r\n        name=\"Username\"\r\n        handleOnChange={({ target }) => props.setUsername(target.value)}\r\n        id=\"inputUsername\"\r\n      />\r\n    </div>\r\n    <div>\r\n      password\r\n      <Input\r\n        type=\"password\"\r\n        value={props.password}\r\n        name=\"Password\"\r\n        handleOnChange={({ target }) => props.setPassword(target.value)}\r\n        id=\"inputPassword\"\r\n      />\r\n    </div>\r\n    <Button type=\"submit\" text=\"Login\" id=\"loginButton\" />\r\n  </form>      \r\n)\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Filter from './components/Filter'\nimport AddNewBlog from './components/AddNewBlog'\nimport Blogs from './components/Blogs'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\nimport Button from './components/Button'\nimport LoginForm from './components/LoginForm'\nimport loginService from './services/login'\nimport './App.css'\nimport Togglable from './components/Togglable'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { notificationChange } from \"./reducers/notificationReducer\"\nimport { filterChange } from './reducers/filterReducer'\nimport { addBlog, likeBlog, initializeBlogs, deleteBlog } from './reducers/blogReducer'\n\n\n\nconst App = () => {\n  const [ newLike, setNewLike ] = useState('')\n  const [ username, setUsername ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const [ user, setUser ] = useState(null)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [])\n\n  const blogs = useSelector(state => state.blogs.filter(blog => blog.title.toLowerCase().includes(state.filter.toLowerCase())))\n  console.log('blogs', blogs)\n  \n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n      console.log(user)\n      \n    }\n  }, [])\n\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      showMessage('wrong credentials', 'error')\n    }\n  }\n\n  const handleLogout = () => {\n    console.log('logging out')\n    setUser(null)\n    window.localStorage.clear()\n  }\n  \n\n  const handleAddClick = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      dispatch(addBlog(blogObject))\n      showMessage(`Added ${blogObject.title}`, 'success')\n      resetForm()\n      \n    } catch (error) {\n      showMessage(error, 'error')\n    }\n\n  }\n\n  const handleDeleteClick = async (id, title) => {\n    let message = `Do you really want to delete ${title}?`\n    if(window.confirm(message)){\n      try {\n        //const deletedBlog = await blogService.deleteBlog(id)\n        dispatch(deleteBlog(id))\n        showMessage(`The \"${title}\" blog has beed deleted`, 'neutral')\n      } catch (error) {\n        showMessage(error, 'error')\n      }\n    }\n  }\n\n  const handleLikeClick = (blog) => {\n\n    console.log(blog)\n    \n    const updatedObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes += 1,\n      user: blog.user ? blog.user.id : undefined,\n    }    \n\n    try {\n      dispatch(likeBlog(updatedObject, blog.id))\n      showMessage(`You liked ${updatedObject.title}`, 'success')\n    } catch (error) {\n      showMessage(`Error: ${error}`, 'error')\n    }\n  }\n\n  const resetForm = () => {\n    setNewLike('')\n    document.getElementById('titleInput0').value = ''\n    document.getElementById('authorInput0').value = ''\n    document.getElementById('urlInput0').value = ''\n  }\n\n  const showMessage = (msg, msgClass) => {\n    dispatch(notificationChange({ msg, msgClass }, 5))\n  }\n\n  const handleFilterOnChange = (e) => {\n    dispatch(filterChange(e.target.value))\n  }\n\n  const blogFormRef = React.createRef()\n\n  if (user === null) {\n    return (\n      <div>\n        <Header text={'Bloglist'} />\n        <Notification />\n        <Togglable buttonLabel={'Login'} buttonHideLabel={'Cancel'}>\n          <LoginForm \n            handleLogin={handleLogin}\n            username={username}\n            setUsername={setUsername} \n            password={password}\n            setPassword={setPassword}\n          />\n        </Togglable>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Header text={'Bloglist'} />\n      <Notification />\n      <p>{user.name} logged in</p><Button text={\"logout\"} handleClick={handleLogout} />\n      <Togglable buttonLabel={'New Blog'} ref={blogFormRef} buttonHideLabel={'Cancel'}>\n        <AddNewBlog \n          createBlog={handleAddClick}\n          showMessage={showMessage}\n        />\n      </Togglable>\n      <Filter handleFilterOnChange={handleFilterOnChange} />\n    \n      <Blogs blogs={blogs} handleDeleteClick={handleDeleteClick} handleLikeClick={handleLikeClick} user={user} />      \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}