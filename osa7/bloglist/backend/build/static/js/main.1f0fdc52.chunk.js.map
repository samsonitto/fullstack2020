{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","reducers/filterReducer.js","services/login.js","reducers/loginReduser.js","services/users.js","reducers/userReducer.js","stores/store.js","components/Header.js","components/Input.js","components/Header2.js","components/Filter.js","components/Button.js","components/AddNewBlog.js","components/Togglable.js","components/Blog.js","components/Blogs.js","components/Notification.js","components/LoginForm.js","components/User.js","components/Users.js","components/UserInfo.js","components/BlogInfo.js","components/NavBar.js","App.js","index.js"],"names":["timer","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","updatedObject","id","put","deleteBlog","delete","setToken","newToken","sortedState","state","sort","b","likes","addBlog","content","dispatch","blogService","newBlog","type","deletedBlog","reducer","action","console","log","likedBlog","find","map","savedBlog","dletedId","filter","notificationReducer","notification","filterReducer","login","credentials","loginChange","username","password","loginService","user","window","localStorage","setItem","JSON","stringify","combineReducers","blogs","blogReducer","loggedUser","loginReducer","users","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Header","props","text","Input","placeholder","onChange","handleOnChange","value","name","Header2","Filter","handleFilterOnChange","Button","onClick","handleClick","AddNewBlog","createBlog","showMessage","useState","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","e","target","preventDefault","title","author","url","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenHidden","toggleVisibility","useImperativeHandle","style","buttonLabel","idView","className","children","buttonHideLabel","idHide","Blog","blog","handleLikeClick","handleDeleteClick","key","to","Blogs","blogFormRef","createRef","handleAddClick","i","rowIndex","Notification","useSelector","msgClass","msg","LoginForm","onSubmit","handleLogin","setUsername","setPassword","User","length","Users","UserInfo","BlogInfo","href","trim","NavBar","handleLogout","App","useDispatch","useEffect","loggedUserJSON","getItem","parse","userService","toLowerCase","includes","match","useRouteMatch","userInfo","params","matchBlog","blogInfo","error","blogObject","current","resetForm","message","confirm","undefined","updatedBlog","likeBlog","document","getElementById","time","clearTimeout","setTimeout","timeout","clear","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f0fdc52.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'NOTIFICATION':\r\n      return action.notification\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nlet timer\r\n\r\nexport const notificationChange = (notification, time) => {\r\n  return async dispatch => {\r\n    await dispatch({\r\n      type: 'NOTIFICATION',\r\n      notification,\r\n    })\r\n\r\n    clearTimeout(timer)\r\n\r\n    timer = setTimeout(() => {\r\n      dispatch({\r\n        type: 'NOTIFICATION',\r\n        notification: { msg: '', msgClass: undefined },\r\n        timeout: true\r\n      })\r\n    }, time * 1000)\r\n    \r\n  }\r\n}\r\n\r\nexport default notificationReducer","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = (updatedObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteBlog = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response)\r\n}\r\n\r\nexport default { getAll, create, update, deleteBlog, setToken }","import blogService from '../services/blogs'\r\n\r\nconst sortedState = (state) => {\r\n  return state.sort((a, b) => (a.likes < b.likes ? 1 : -1))\r\n}\r\n\r\nconst reducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n  switch (action.type) {\r\n    case 'LIKE':\r\n      const id = action.data.id\r\n      const likedBlog = state.find(b => b.id === id)\r\n      return sortedState(state.map(b => b.id !== id ? b : likedBlog))\r\n\r\n    case 'NEW':\r\n      return sortedState([...state, action.data.savedBlog])\r\n      \r\n    case 'INIT_BLOGS':\r\n      return action.data\r\n      \r\n    case 'DELETE':\r\n      const dletedId = action.data.id\r\n      return sortedState(state.filter(b => b.id !== dletedId))\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: sortedState(blogs)\r\n    })\r\n  }\r\n}\r\n\r\nexport const addBlog = (content) => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(content)\r\n    dispatch({\r\n      type: 'NEW',\r\n      data: newBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blog, id) => {\r\n  return async dispatch => {\r\n    const updatedBlog = await blogService.update(blog, id)\r\n    dispatch({\r\n      type: 'LIKE',\r\n      data: updatedBlog\r\n    })\r\n    \r\n  }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async dispatch => {\r\n    const deletedBlog = await blogService.deleteBlog(id)\r\n    dispatch({\r\n      type: 'DELETE',\r\n      data: deletedBlog\r\n    })\r\n    \r\n  }\r\n}\r\n\r\nexport default reducer","const filterReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const filterChange = (filter) => {\r\n  return {\r\n    type: 'FILTER',\r\n    filter,\r\n  }\r\n}\r\n\r\nexport default filterReducer","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import blogService from '../services/blogs'\r\nimport loginService from '../services/login'\r\n\r\nconst reducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n  switch (action.type) {\r\n    case 'LOGGED_IN':\r\n      return action.data\r\n    case 'LOGIN':\r\n      return action.data\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const loggedIn = () => {\r\n  return async dispatch => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: 'LOGGED_IN',\r\n        data: user\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const loginChange = (username, password) => {\r\n  return async dispatch => {\r\n    const user = await loginService.login({\r\n      username, password,\r\n    })\r\n    window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\r\n    blogService.setToken(user.token)\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    window.localStorage.clear()\r\n    dispatch({\r\n      type: 'LOGGED_IN',\r\n      data: null\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getOneUser = (id) => {\r\n  const request = axios.get(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, getOneUser }","import userService from '../services/users'\r\n\r\nconst reducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n  switch (action.type) {\r\n    case 'INIT_USERS':\r\n      return action.data\r\n    case 'USER':\r\n      return action.data\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await userService.getAll()\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUser = (id) => {\r\n  return async dispatch => {\r\n    const user = await userService.getOneUser(id)\r\n    dispatch({\r\n      type: 'USER',\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport blogReducer from '../reducers/blogReducer'\r\nimport notificationReducer from '../reducers/notificationReducer'\r\nimport filterReducer from '../reducers/filterReducer'\r\nimport loginReducer from '../reducers/loginReduser'\r\nimport userReducer from '../reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificationReducer,\r\n  filter: filterReducer,\r\n  loggedUser: loginReducer,\r\n  users: userReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <h1>{props.text}</h1>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={props.handleOnChange}\r\n            id={props.id}\r\n            value={props.value}\r\n            name={props.name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Header2 = (props) => {\r\n    return (\r\n        <h2>{props.text}</h2>\r\n    )\r\n}\r\n\r\nexport default Header2","import React from 'react'\r\nimport Input from './Input'\r\nimport Header2 from './Header2'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n        <Header2 text={'Search'} />\r\n        Filter by Name: <Input placeholder={'Name..'} handleOnChange={props.handleFilterOnChange} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button \r\n            onClick={props.handleClick}\r\n            type={props.type}\r\n            id={props.id}\r\n        >\r\n            {props.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState } from \"react\"\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport Header2 from './Header2'\r\n\r\nconst AddNewBlog = ({ createBlog, showMessage }) => {\r\n  const [ newTitle, setNewTitle ] = useState('')\r\n  const [ newAuthor, setNewAuthor ] = useState('')\r\n  const [ newUrl, setNewUrl ] = useState('')\r\n\r\n  const handleAddTitleOnChange = (e) => {\r\n    setNewTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddAuthorOnChange = (e) => {\r\n    setNewAuthor(e.target.value)\r\n  }\r\n\r\n  const handleAddUrlOnChange = (e) => {\r\n    setNewUrl(e.target.value)\r\n  }\r\n\r\n  const addBlog = (e) => {\r\n    e.preventDefault()\r\n    if(newTitle === '') {\r\n      showMessage('Input title', 'error')\r\n    }\r\n    else if (newAuthor === '') {\r\n      showMessage('Input author', 'error')\r\n    }\r\n    else if (newUrl === '') {\r\n      showMessage('Input url', 'error')\r\n    } else {\r\n      const newBlog = {\r\n        title: newTitle,\r\n        author: newAuthor,\r\n        url: newUrl,\r\n      }\r\n      createBlog({\r\n        title: newTitle,\r\n        author: newAuthor,\r\n        url: newUrl,\r\n      })\r\n\r\n      setNewTitle('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n    }\r\n  }\r\n    return (\r\n        <>\r\n            <Header2 text={'Add New Blog'} />\r\n            <form>\r\n                <div>\r\n                    Title: <Input placeholder={'Title..'} handleOnChange={handleAddTitleOnChange} id={'titleInput0'} /><br />\r\n                    Author: <Input placeholder={'Author..'} handleOnChange={handleAddAuthorOnChange} id={'authorInput0'} /><br />\r\n                    Url: <Input placeholder={'Url..'} handleOnChange={handleAddUrlOnChange} id={'urlInput0'} />\r\n                </div>\r\n                <div>\r\n                    <Button type={'submit'} handleClick={addBlog} text={'Add'} id='addNewBlogButton' />\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddNewBlog","import React, { useState, useImperativeHandle } from 'react'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [ visible, setVisible ] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenHidden = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button handleClick={toggleVisibility} text={props.buttonLabel} id={props.idView} />\r\n      </div>\r\n      <div style={showWhenHidden} className='togglableContent'>\r\n        {props.children}\r\n        <Button handleClick={toggleVisibility} text={props.buttonHideLabel} id={props.idHide} />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n  buttonHideLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React from 'react'\r\nimport Togglable from './Togglable'\r\nimport Button from './Button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Blog = ({ blog, user, handleLikeClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr id={blog.id} key={blog.id} className='blog'>\r\n      <td><Link to={`/blogs/${blog.id}`}>{blog.title}</Link></td>\r\n      <td>{blog.author}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport Header2 from './Header2'\r\nimport Togglable from './Togglable'\r\nimport Blog from './Blog'\r\nimport Filter from './Filter'\r\nimport AddNewBlog from './AddNewBlog'\r\n\r\nconst Blogs = (props) => {\r\n  const blogFormRef = React.createRef()\r\n\r\n    return (\r\n      <>\r\n        <Togglable buttonLabel={'New Blog'} ref={blogFormRef} buttonHideLabel={'Cancel'}>\r\n          <AddNewBlog \r\n            createBlog={props.handleAddClick}\r\n            showMessage={props.showMessage}\r\n          />\r\n        </Togglable>\r\n        <Filter handleFilterOnChange={props.handleFilterOnChange} />\r\n        <Header2 text={'Blogs'} />\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Author</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.blogs.map((blog, i) => \r\n              <>\r\n                <Blog blog={blog} user={props.user} handleLikeClick={props.handleLikeClick} handleDeleteClick={props.handleDeleteClick} rowIndex={`row${i}`} />\r\n              </>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n  \r\n  return (\r\n    <div className={notification.msgClass}>\r\n        {notification.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = (props) => (\r\n  <form onSubmit={props.handleLogin}>\r\n    <div>\r\n      username\r\n      <Input\r\n        type=\"text\"\r\n        value={props.username}\r\n        name=\"Username\"\r\n        handleOnChange={({ target }) => props.setUsername(target.value)}\r\n        id=\"inputUsername\"\r\n      />\r\n    </div>\r\n    <div>\r\n      password\r\n      <Input\r\n        type=\"password\"\r\n        value={props.password}\r\n        name=\"Password\"\r\n        handleOnChange={({ target }) => props.setPassword(target.value)}\r\n        id=\"inputPassword\"\r\n      />\r\n    </div>\r\n    <Button type=\"submit\" text=\"Login\" id=\"loginButton\" />\r\n  </form>      \r\n)\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst User = ({ user }) => {\r\n  return (\r\n    <>\r\n      <tr id={user.id} key={user.id} className='blog'>\r\n        <td><Link to={`/users/${user.id}`}>{user.name}</Link></td>\r\n        <td>{user.blogs.length}</td>\r\n      </tr>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport Header2 from './Header2'\r\nimport { useSelector } from 'react-redux'\r\nimport User from './User'\r\n\r\nconst Users = () => {\r\n  const users = useSelector(state => state.users)\r\n\r\n  return (\r\n    <div>\r\n      <Header2 text=\"Users\" />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>User</th>\r\n            <th>Blogs created</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user, i) => \r\n            <>\r\n              <User user={user} />\r\n            </>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport Header2 from './Header2'\r\n\r\nconst UserInfo = ({ user }) => {\r\n  return (\r\n    <div>\r\n      <Header2 text={user.name} />\r\n      <h3>Added Blogs</h3>\r\n      {user.blogs.map((blog, i) => \r\n        <li>{blog.title}</li>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserInfo","import React from 'react'\r\nimport Header2 from './Header2'\r\nimport Button from './Button'\r\n\r\nconst BlogInfo = ({ blog, user, handleLikeClick, handleDeleteClick }) => {\r\n  return (\r\n    <>\r\n      <Header2 text={blog.title} />\r\n      <a href={blog.url}>{blog.url}</a>\r\n      <p>\r\n        {blog.likes} likes \r\n        <Button text='like' handleClick={() => handleLikeClick(blog)} />\r\n        {blog.user ? (user.username === blog.user.username ? <Button text='Delete Blog' id={(blog.title + blog.author).trim()} handleClick={() => handleDeleteClick(blog.id, blog.title)} /> : '') : ''}\r\n      </p>\r\n      {blog.user ? <p>added by {blog.user.name}</p> : ''}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogInfo","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\nconst NavBar = ({ user, handleLogout }) => {\r\n  return (\r\n    <div className='navbar'>\r\n      <Link to='/' className='navbarLink'>blogs</Link>\r\n      <Link to='/users' className='navbarLink'>users</Link>\r\n      {user.name} logged in \r\n      <Button text={\"logout\"} handleClick={handleLogout} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Filter from './components/Filter'\nimport AddNewBlog from './components/AddNewBlog'\nimport Blogs from './components/Blogs'\nimport Notification from './components/Notification'\nimport Button from './components/Button'\nimport LoginForm from './components/LoginForm'\nimport './App.css'\nimport Togglable from './components/Togglable'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { notificationChange } from \"./reducers/notificationReducer\"\nimport { filterChange } from './reducers/filterReducer'\nimport { addBlog, likeBlog, initializeBlogs, deleteBlog } from './reducers/blogReducer'\nimport { loggedIn, loginChange, logout } from './reducers/loginReduser'\nimport Users from './components/Users'\nimport { initializeUsers } from './reducers/userReducer'\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom'\nimport UserInfo from './components/UserInfo'\nimport BlogInfo from './components/BlogInfo'\nimport NavBar from './components/NavBar'\n\n\n\nconst App = () => {\n  const [ username, setUsername ] = useState('')\n  const [ password, setPassword ] = useState('')\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [])\n  \n  useEffect(() => {\n    dispatch(loggedIn())\n  }, [])\n  \n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [])\n\n  const blogs = useSelector(state => state.blogs.filter(blog => blog.title.toLowerCase().includes(state.filter.toLowerCase())))\n\n  const user = useSelector(state => state.loggedUser)\n  const users = useSelector(state => state.users)\n\n  const match = useRouteMatch('/users/:id')\n  \n  const userInfo = match ? users.find(user => user.id === match.params.id) : null\n\n  const matchBlog = useRouteMatch('/blogs/:id')\n  const blogInfo = matchBlog ? blogs.find(blog => blog.id === matchBlog.params.id) : null\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      dispatch(loginChange(username, password))\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      showMessage('wrong credentials', 'error')\n    }\n  }\n\n  const handleLogout = () => {\n    dispatch(logout())\n  }\n  \n\n  const handleAddClick = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      dispatch(addBlog(blogObject))\n      showMessage(`Added ${blogObject.title}`, 'success')\n      resetForm()\n      \n    } catch (error) {\n      showMessage(error, 'error')\n    }\n\n  }\n\n  const handleDeleteClick = async (id, title) => {\n    let message = `Do you really want to delete ${title}?`\n    if(window.confirm(message)){\n      try {\n        dispatch(deleteBlog(id))\n        showMessage(`The \"${title}\" blog has beed deleted`, 'neutral')\n      } catch (error) {\n        showMessage(error, 'error')\n      }\n    }\n  }\n\n  const handleLikeClick = (blog) => {\n\n    console.log(blog)\n    \n    const updatedObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes += 1,\n      user: blog.user ? blog.user.id : undefined,\n    }    \n\n    try {\n      dispatch(likeBlog(updatedObject, blog.id))\n      showMessage(`You liked ${updatedObject.title}`, 'success')\n    } catch (error) {\n      showMessage(`Error: ${error}`, 'error')\n    }\n  }\n\n  const resetForm = () => {\n    document.getElementById('titleInput0').value = ''\n    document.getElementById('authorInput0').value = ''\n    document.getElementById('urlInput0').value = ''\n  }\n\n  const showMessage = (msg, msgClass) => {\n    dispatch(notificationChange({ msg, msgClass }, 5))\n  }\n\n  const handleFilterOnChange = (e) => {\n    dispatch(filterChange(e.target.value))\n  }\n\n  const blogFormRef = React.createRef()\n\n  if (user === null) {\n    return (\n      <div>\n        <Header text={'Blog App'} />\n        <Notification />\n        <Togglable buttonLabel={'Login'} buttonHideLabel={'Cancel'}>\n          <LoginForm \n            handleLogin={handleLogin}\n            username={username}\n            setUsername={setUsername} \n            password={password}\n            setPassword={setPassword}\n          />\n        </Togglable>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <NavBar user={user} handleLogout={handleLogout} />\n      <Header text={'Blog App'} />\n      <Notification />\n      \n      <Switch>\n        <Route path=\"/users/:id\">\n          <UserInfo user={userInfo} />\n        </Route>\n        <Route path=\"/users\">\n          <Users />\n        </Route>\n        <Route path=\"/blogs/:id\">\n          <BlogInfo blog={blogInfo} user={user} handleLikeClick={handleLikeClick} handleDeleteClick={handleDeleteClick} />\n        </Route>\n        <Route path=\"/\">\n          <Blogs \n            blogs={blogs} \n            handleDeleteClick={handleDeleteClick} \n            handleLikeClick={handleLikeClick} \n            user={user} \n            handleFilterOnChange={handleFilterOnChange} \n            handleAddClick={handleAddClick}\n            showMessage={showMessage}\n          />\n        </Route>\n      </Switch>\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}