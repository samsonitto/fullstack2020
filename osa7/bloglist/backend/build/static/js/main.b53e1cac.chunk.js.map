{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","reducers/filterReducer.js","services/login.js","reducers/loginReduser.js","stores/store.js","components/Header.js","components/Input.js","components/Header2.js","components/Filter.js","components/Button.js","components/AddNewBlog.js","components/Togglable.js","components/Blog.js","components/Blogs.js","components/Notification.js","components/LoginForm.js","App.js","index.js"],"names":["timer","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","updatedObject","id","put","deleteBlog","delete","setToken","newToken","sortedState","state","sort","b","likes","addBlog","content","dispatch","blogService","newBlog","type","deletedBlog","reducer","action","console","log","likedBlog","find","map","savedBlog","dletedId","filter","notificationReducer","notification","filterReducer","login","credentials","loginChange","username","password","loginService","user","window","localStorage","setItem","JSON","stringify","combineReducers","blogs","blogReducer","loggedUser","loginReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Header","props","text","Input","placeholder","onChange","handleOnChange","value","name","Header2","Filter","handleFilterOnChange","Button","onClick","handleClick","AddNewBlog","createBlog","showMessage","useState","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","e","target","preventDefault","title","author","url","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenHidden","toggleVisibility","useImperativeHandle","style","buttonLabel","idView","className","children","buttonHideLabel","idHide","Blog","blog","handleLikeClick","handleDeleteClick","key","trim","Blogs","i","rowIndex","Notification","useSelector","msgClass","msg","LoginForm","onSubmit","handleLogin","setUsername","setPassword","App","useDispatch","useEffect","toLowerCase","includes","loggedUserJSON","getItem","parse","error","handleAddClick","blogObject","blogFormRef","current","resetForm","message","confirm","document","getElementById","time","clearTimeout","setTimeout","undefined","timeout","createRef","clear","updatedBlog","likeBlog","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b53e1cac.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'NOTIFICATION':\r\n      return action.notification\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nlet timer\r\n\r\nexport const notificationChange = (notification, time) => {\r\n  return async dispatch => {\r\n    await dispatch({\r\n      type: 'NOTIFICATION',\r\n      notification,\r\n    })\r\n\r\n    clearTimeout(timer)\r\n\r\n    timer = setTimeout(() => {\r\n      dispatch({\r\n        type: 'NOTIFICATION',\r\n        notification: { msg: '', msgClass: undefined },\r\n        timeout: true\r\n      })\r\n    }, time * 1000)\r\n    \r\n  }\r\n}\r\n\r\nexport default notificationReducer","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = (updatedObject, id) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteBlog = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response)\r\n}\r\n\r\nexport default { getAll, create, update, deleteBlog, setToken }","import blogService from '../services/blogs'\r\n\r\nconst sortedState = (state) => {\r\n  return state.sort((a, b) => (a.likes < b.likes ? 1 : -1))\r\n}\r\n\r\nconst reducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n  switch (action.type) {\r\n    case 'LIKE':\r\n      const id = action.data.id\r\n      const likedBlog = state.find(b => b.id === id)\r\n      return sortedState(state.map(b => b.id !== id ? b : likedBlog))\r\n\r\n    case 'NEW':\r\n      return sortedState([...state, action.data.savedBlog])\r\n      \r\n    case 'INIT_BLOGS':\r\n      return action.data\r\n      \r\n    case 'DELETE':\r\n      const dletedId = action.data.id\r\n      return sortedState(state.filter(b => b.id !== dletedId))\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: sortedState(blogs)\r\n    })\r\n  }\r\n}\r\n\r\nexport const addBlog = (content) => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(content)\r\n    dispatch({\r\n      type: 'NEW',\r\n      data: newBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blog, id) => {\r\n  return async dispatch => {\r\n    const updatedBlog = await blogService.update(blog, id)\r\n    dispatch({\r\n      type: 'LIKE',\r\n      data: updatedBlog\r\n    })\r\n    \r\n  }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async dispatch => {\r\n    const deletedBlog = await blogService.deleteBlog(id)\r\n    dispatch({\r\n      type: 'DELETE',\r\n      data: deletedBlog\r\n    })\r\n    \r\n  }\r\n}\r\n\r\nexport default reducer","const filterReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const filterChange = (filter) => {\r\n  return {\r\n    type: 'FILTER',\r\n    filter,\r\n  }\r\n}\r\n\r\nexport default filterReducer","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import blogService from '../services/blogs'\r\nimport loginService from '../services/login'\r\n\r\nconst reducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n  switch (action.type) {\r\n    case 'LOGGED_IN':\r\n      return action.data\r\n    case 'LOGIN':\r\n      return action.data\r\n    case 'LOGOUT':\r\n      return action.data\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const loggedIn = () => {\r\n  return async dispatch => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: 'LOGGED_IN',\r\n        data: user\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const loginChange = (username, password) => {\r\n  return async dispatch => {\r\n    const user = await loginService.login({\r\n      username, password,\r\n    })\r\n    window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\r\n    blogService.setToken(user.token)\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    window.localStorage.clear()\r\n    dispatch({\r\n      type: 'LOGGED_IN',\r\n      data: null\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport blogReducer from '../reducers/blogReducer'\r\nimport notificationReducer from '../reducers/notificationReducer'\r\nimport filterReducer from '../reducers/filterReducer'\r\nimport loginReducer from '../reducers/loginReduser'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificationReducer,\r\n  filter: filterReducer,\r\n  loggedUser: loginReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <h1>{props.text}</h1>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={props.handleOnChange}\r\n            id={props.id}\r\n            value={props.value}\r\n            name={props.name}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Header2 = (props) => {\r\n    return (\r\n        <h2>{props.text}</h2>\r\n    )\r\n}\r\n\r\nexport default Header2","import React from 'react'\r\nimport Input from './Input'\r\nimport Header2 from './Header2'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n        <Header2 text={'Search'} />\r\n        Filter by Name: <Input placeholder={'Name..'} handleOnChange={props.handleFilterOnChange} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button \r\n            onClick={props.handleClick}\r\n            type={props.type}\r\n            id={props.id}\r\n        >\r\n            {props.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React, { useState } from \"react\"\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport Header2 from './Header2'\r\n\r\nconst AddNewBlog = ({ createBlog, showMessage }) => {\r\n  const [ newTitle, setNewTitle ] = useState('')\r\n  const [ newAuthor, setNewAuthor ] = useState('')\r\n  const [ newUrl, setNewUrl ] = useState('')\r\n\r\n  const handleAddTitleOnChange = (e) => {\r\n    setNewTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddAuthorOnChange = (e) => {\r\n    setNewAuthor(e.target.value)\r\n  }\r\n\r\n  const handleAddUrlOnChange = (e) => {\r\n    setNewUrl(e.target.value)\r\n  }\r\n\r\n  const addBlog = (e) => {\r\n    e.preventDefault()\r\n    if(newTitle === '') {\r\n      showMessage('Input title', 'error')\r\n    }\r\n    else if (newAuthor === '') {\r\n      showMessage('Input author', 'error')\r\n    }\r\n    else if (newUrl === '') {\r\n      showMessage('Input url', 'error')\r\n    } else {\r\n      const newBlog = {\r\n        title: newTitle,\r\n        author: newAuthor,\r\n        url: newUrl,\r\n      }\r\n      createBlog({\r\n        title: newTitle,\r\n        author: newAuthor,\r\n        url: newUrl,\r\n      })\r\n\r\n      setNewTitle('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n    }\r\n  }\r\n    return (\r\n        <>\r\n            <Header2 text={'Add New Blog'} />\r\n            <form>\r\n                <div>\r\n                    Title: <Input placeholder={'Title..'} handleOnChange={handleAddTitleOnChange} id={'titleInput0'} /><br />\r\n                    Author: <Input placeholder={'Author..'} handleOnChange={handleAddAuthorOnChange} id={'authorInput0'} /><br />\r\n                    Url: <Input placeholder={'Url..'} handleOnChange={handleAddUrlOnChange} id={'urlInput0'} />\r\n                </div>\r\n                <div>\r\n                    <Button type={'submit'} handleClick={addBlog} text={'Add'} id='addNewBlogButton' />\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddNewBlog","import React, { useState, useImperativeHandle } from 'react'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [ visible, setVisible ] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenHidden = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button handleClick={toggleVisibility} text={props.buttonLabel} id={props.idView} />\r\n      </div>\r\n      <div style={showWhenHidden} className='togglableContent'>\r\n        {props.children}\r\n        <Button handleClick={toggleVisibility} text={props.buttonHideLabel} id={props.idHide} />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n  buttonHideLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React, { useState } from 'react'\r\nimport Togglable from './Togglable'\r\nimport Button from './Button'\r\n\r\nconst Blog = ({ blog, user, handleLikeClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr id={blog.id} key={blog.id} className='blog'>\r\n      <td>{blog.title}</td>\r\n      <td>{blog.author}</td>\r\n      <td>\r\n        <Togglable buttonLabel={'View'} buttonHideLabel={'Hide Info'} idView={blog.title.trim()}>\r\n          <div>\r\n            <p>URL: {blog.url}</p>\r\n            <p>Likes: {blog.likes} <Button text='like' handleClick={() => handleLikeClick(blog)} /></p>\r\n            {blog.user ? <p>Added by: {blog.user.name}</p> : ''}\r\n            {blog.user ? (user.username === blog.user.username ? <Button text='Delete Blog' id={(blog.title + blog.author).trim()} handleClick={() => handleDeleteClick(blog.id, blog.title)} /> : '') : ''}\r\n          </div>\r\n        </Togglable>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Blog","import React from 'react';\r\nimport Header2 from './Header2';\r\nimport Button from './Button';\r\nimport Togglable from './Togglable';\r\nimport Blog from './Blog';\r\n\r\nconst Blogs = (props) => {\r\n    return (\r\n        <>\r\n          <Header2 text={'Blogs'} />\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Author</th>\r\n                <th>Info</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.blogs.map((blog, i) => \r\n                <>\r\n                  <Blog blog={blog} user={props.user} handleLikeClick={props.handleLikeClick} handleDeleteClick={props.handleDeleteClick} rowIndex={`row${i}`} />\r\n                </>\r\n              )}\r\n            </tbody>\r\n            \r\n          </table>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n  \r\n  return (\r\n    <div className={notification.msgClass}>\r\n        {notification.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = (props) => (\r\n  <form onSubmit={props.handleLogin}>\r\n    <div>\r\n      username\r\n      <Input\r\n        type=\"text\"\r\n        value={props.username}\r\n        name=\"Username\"\r\n        handleOnChange={({ target }) => props.setUsername(target.value)}\r\n        id=\"inputUsername\"\r\n      />\r\n    </div>\r\n    <div>\r\n      password\r\n      <Input\r\n        type=\"password\"\r\n        value={props.password}\r\n        name=\"Password\"\r\n        handleOnChange={({ target }) => props.setPassword(target.value)}\r\n        id=\"inputPassword\"\r\n      />\r\n    </div>\r\n    <Button type=\"submit\" text=\"Login\" id=\"loginButton\" />\r\n  </form>      \r\n)\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Filter from './components/Filter'\nimport AddNewBlog from './components/AddNewBlog'\nimport Blogs from './components/Blogs'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\nimport Button from './components/Button'\nimport LoginForm from './components/LoginForm'\nimport loginService from './services/login'\nimport './App.css'\nimport Togglable from './components/Togglable'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { notificationChange } from \"./reducers/notificationReducer\"\nimport { filterChange } from './reducers/filterReducer'\nimport { addBlog, likeBlog, initializeBlogs, deleteBlog } from './reducers/blogReducer'\nimport { loggedIn, loginChange, logout } from './reducers/loginReduser';\n\n\n\nconst App = () => {\n  const [ username, setUsername ] = useState('')\n  const [ password, setPassword ] = useState('')\n  //const [ user, setUser ] = useState(null)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [])\n\n  const blogs = useSelector(state => state.blogs.filter(blog => blog.title.toLowerCase().includes(state.filter.toLowerCase())))\n  console.log('blogs', blogs)\n  \n  useEffect(() => {\n    dispatch(loggedIn())\n  }, [])\n\n  const user = useSelector(state => state.loggedUser)\n\n  const handleLogin = async (e) => {\n    e.preventDefault()\n    try {\n      dispatch(loginChange(username, password))\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      showMessage('wrong credentials', 'error')\n    }\n  }\n\n  const handleLogout = () => {\n    dispatch(logout())\n  }\n  \n\n  const handleAddClick = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      dispatch(addBlog(blogObject))\n      showMessage(`Added ${blogObject.title}`, 'success')\n      resetForm()\n      \n    } catch (error) {\n      showMessage(error, 'error')\n    }\n\n  }\n\n  const handleDeleteClick = async (id, title) => {\n    let message = `Do you really want to delete ${title}?`\n    if(window.confirm(message)){\n      try {\n        dispatch(deleteBlog(id))\n        showMessage(`The \"${title}\" blog has beed deleted`, 'neutral')\n      } catch (error) {\n        showMessage(error, 'error')\n      }\n    }\n  }\n\n  const handleLikeClick = (blog) => {\n\n    console.log(blog)\n    \n    const updatedObject = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes += 1,\n      user: blog.user ? blog.user.id : undefined,\n    }    \n\n    try {\n      dispatch(likeBlog(updatedObject, blog.id))\n      showMessage(`You liked ${updatedObject.title}`, 'success')\n    } catch (error) {\n      showMessage(`Error: ${error}`, 'error')\n    }\n  }\n\n  const resetForm = () => {\n    document.getElementById('titleInput0').value = ''\n    document.getElementById('authorInput0').value = ''\n    document.getElementById('urlInput0').value = ''\n  }\n\n  const showMessage = (msg, msgClass) => {\n    dispatch(notificationChange({ msg, msgClass }, 5))\n  }\n\n  const handleFilterOnChange = (e) => {\n    dispatch(filterChange(e.target.value))\n  }\n\n  const blogFormRef = React.createRef()\n\n  if (user === null) {\n    return (\n      <div>\n        <Header text={'Bloglist'} />\n        <Notification />\n        <Togglable buttonLabel={'Login'} buttonHideLabel={'Cancel'}>\n          <LoginForm \n            handleLogin={handleLogin}\n            username={username}\n            setUsername={setUsername} \n            password={password}\n            setPassword={setPassword}\n          />\n        </Togglable>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Header text={'Bloglist'} />\n      <Notification />\n      <p>{user.name} logged in</p><Button text={\"logout\"} handleClick={handleLogout} />\n      <Togglable buttonLabel={'New Blog'} ref={blogFormRef} buttonHideLabel={'Cancel'}>\n        <AddNewBlog \n          createBlog={handleAddClick}\n          showMessage={showMessage}\n        />\n      </Togglable>\n      <Filter handleFilterOnChange={handleFilterOnChange} />\n    \n      <Blogs blogs={blogs} handleDeleteClick={handleDeleteClick} handleLikeClick={handleLikeClick} user={user} />      \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}